# SPRING BATCH META-DATA (this properties are not a spring properties. they are gonna be used to configure the spring batch data-source bean)
spring:
  batch:
    job:
      enabled: false
    datasource:
      url: jdbc:h2:file:~/test;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1
      driverClassName: org.h2.Driver
      username: sa
      password:

#JPA DATA-SOURCE (this properties are not a spring properties. they are gonna be used to configure the entity manger bean)
example:
  jpa:
    datasource:
      driver-class-name: org.postgresql.Driver
      url: jdbc:postgresql://${POSTGRES_HOST}:5432/db
      username: admin
      password: password
      hibernate:
        ddl-auto: update
        show_sql: true
      properties:
        hibernate:
          dialect: org.hibernate.dialect.PostgreSQLDialect
          default_schema: batch_schema

logging:
  level:
    root: FATAL
    org.springframework: WARN
    org.spring.tutorial: INFO

# SPRING BATCH (BatchProperties)
#spring.batch.initialize-schema=embedded # Database schema initialization mode.
#spring.batch.job.enabled=false  Execute all Spring Batch jobs in the context on startup.
#spring.batch.job.names= # Comma-separated list of job names to execute on startup (for instance, `job1,job2`). By default, all Jobs found in the context are executed.
#spring.batch.schema=classpath:org/springframework/batch/core/schema-@@platform@@.sql # Path to the SQL file to use to initialize the database schema.
#spring.batch.table-prefix= # Table prefix for all the batch meta-data tables.